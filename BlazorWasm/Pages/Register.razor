@page "/Register"
@using global::Shared.Models
@using BlazorWasm.Services
@inject IAuthService authService
@inject NavigationManager navMgr
<h3>Register</h3>

<AuthorizeView>
    <NotAuthorized>

        <div class="card">
            <div class="card-body">


                <div class="mb-3">
                    <label for="1" class="form-label">Username</label>
                    <input @bind="userName" type="text" class="form-control" id="1"/>
                    <div id="emailHelp" class="form-text">Example: bobik</div>
                </div>
                <div class="mb-3">
                    <label for="2" class="form-label">Password</label>
                    <input @bind="password" type="password" class="form-control" id="2">
                </div>
                <div class="mb-3">
                    <label for="1" class="form-label">Email</label>
                    <input @bind="email" type="text" class="form-control" id="1"/>
                    <div id="emailHelp" class="form-text">Example: bobik@gmail.com</div>
                </div>
                <div class="mb-3">
                    <label for="1" class="form-label">Name</label>
                    <input @bind="name" type="text" class="form-control" id="1"/>
                    <div id="emailHelp" class="form-text">Example: Bobik Bobovik</div>
                </div>
                <div class="mb-3">
                    <label for="1" class="form-label">AgeðŸ¤¨</label>
                    <input @bind="age" type="text" class="form-control" id="1"/>
                </div>
                @if (!string.IsNullOrEmpty(errorLabel))
                            {
                                <div class="field">
                                    <label style="color: red">
                                        @errorLabel
                                    </label>
                                </div>
                            }
                <button class="btn btn-primary" @onclick="RegisterAsync">Register</button>
            </div>
        </div>


        @* <div class="card"> *@
        @*     <h3>Please login</h3> *@
        @*     <div class="field"> *@
        @*         <label>User name:</label> *@
        @*         <input type="text" @bind="userName"/> *@
        @*     </div> *@
        @*     <div class="field"> *@
        @*         <label style="text-align: center">Password:</label> *@
        @*         <input type="password" @bind="password"/> *@
        @*     </div> *@
        @*     <div class="field"> *@
        @*         <label style="text-align: center">E-mail:</label> *@
        @*         <input type="text" @bind="email"/> *@
        @*     </div> *@
        @*     <div class="field"> *@
        @*         <label style="text-align: center">Name:</label> *@
        @*         <input type="text" @bind="name"/> *@
        @*     </div> *@
        @*     <div class="field"> *@
        @*         <label style="text-align: center">Age:</label> *@
        @*         <input type="text" @bind="age"/> *@
        @*     </div> *@
        @* *@
        @*     @if (!string.IsNullOrEmpty(errorLabel)) *@
        @*     { *@
        @*         <div class="field"> *@
        @*             <label style="color: red"> *@
        @*                 @errorLabel *@
        @*             </label> *@
        @*         </div> *@
        @*     } *@
        @*     <div class="field"> *@
        @*         <button class="loginbtn" @onclick="RegisterAsync">Log in</button> *@
        @*     </div> *@
        @* </div> *@
    </NotAuthorized>
</AuthorizeView>

@code {
    private string userName;
    private string password;
    private string email;
    private string name;
    private string age;
    private string errorLabel;

    private async Task RegisterAsync()
    {
        errorLabel = "";
        try
        {
            int ageInt = int.Parse(age);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
        try
        {
            User user = new User
            {
                Username = userName,
                Password = password,
                Email = email,
                Name = name,
                Age = int.Parse(age),
                Role = "User",
                Posts = new List<Post>()
            };
            await authService.RegisterAsync(user);
            navMgr.NavigateTo("/Login");
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            errorLabel = $"Error: {e.Message}";
        }
    }

}